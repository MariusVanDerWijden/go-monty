package monty

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestMonty(t *testing.T) {
	a := []uint32{942} // in monty
	b := []uint32{813} // in monty
	n := []uint32{977}
	nInv := []uint32{7}
	result := monty(a, b, nInv, n)
	assert.Equal(t, []uint32{765846}, result)
	fmt.Print(result)
}

func TestMonty64(t *testing.T) {

	//Modulus
	_ = [4]uint64{18446744069414584321, 6034159408538082302, 3691218898639771653, 8353516859464449352}
	// 1111 1111 1111 1111 1111 1111 1111 1111 0000 0000 0000 0000 0000 0000 0000 0001
	// 0101 0011 1011 1101 1010 0100 0000 0010 1111 1111 1111 1110 0101 1011 1111 1110
	// 0011 0011 0011 1001 1101 1000 0000 1000 0000 1001 1010 0001 1101 1000 0000 0101
	// 0111 0011 1110 1101 1010 0111 0101 0011 0010 1001 1001 1101 0111 1101 0100 1000
	mod := []uint32{4294967295, 1, 1404937218, 4294859774, 859428872, 161601541, 1944954707, 698187080}

	// Mprime
	_ = []uint64{18446744069414584319}
	// 1111 1111 1111 1111 1111 1111 1111 1110 1111 1111 1111 1111 1111 1111 1111 1111
	mPrime := []uint32{4294967294, 4294967295}

	// r
	_ = [4]uint64{8589934590, 6378425256633387010, 11064306276430008309, 1739710354780652911}
	// 0000 0000 0000 0000 0000 0000 0000 0001 1111 1111 1111 1111 1111 1111 1111 1110
	// 0101 1000 1000 0100 1011 0111 1111 1010 0000 0000 0000 0011 0100 1000 0000 0010
	// 1001 1001 1000 1100 0100 1111 1110 1111 1110 1100 1011 1100 0100 1111 1111 0101
	// 0001 1000 0010 0100 1011 0001 0101 1001 1010 1100 1100 0101 0000 0101 0110 1111
	r := []uint32{1, 4294967294, 1485092858, 215042, 2576109551, 3971764213, 405057881, 2898593135}
	rOld := []uint32{1, 4294967294, 1485092858, 215042, 2576109551, 3971764213, 405057881, 2898593135}

	res := monty(r, r, mPrime, mod)
	assert.Equal(t, rOld, res)
}
